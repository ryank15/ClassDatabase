package groupproject.mucis.datastructures;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**@author TeamJava
 * @version 1.0 on 4/16/2014
 */

public class DAOSQLiteStudent extends AbstractStudentDAO {
	private static final String DRIVER = "org.sqlite.JDBC";
	private static final String URL = "jdbc:sqlite:student.db";

	public DAOSQLiteStudent() {
		super(DRIVER, URL);
	}

	public void createTable() {
		String q = "create table if not exists students ("
				+ "id integer primary key autoincrement, "
				+ "fName varchar(25) not null, " + "lName varchar(25) not null, "
				+ "email varchar(25) not null, " + "major varchar(25) not null, "
				+ "minor varchar(25) not null, " + "living varchar(25) not null)";
		myUpdate(q);
	}

	@Override
	public int insertStudent(Student s) {
		String q = "INSERT INTO students (id, fName, lName, email, major, minor, living) VALUES (null, ?, ?, ?, ?, ?, ?)";
		int id = 0;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			conn = DriverManager.getConnection(URL);
			ps = conn.prepareStatement(q);
			ps.setString(1, s.getfName());
			ps.setString(2, s.getlName());
			ps.setString(3, s.getEmail());
			ps.setString(4, s.getMajor());
			ps.setString(5, s.getMinor());
			ps.setString(6, s.getLiving());
			ps.executeUpdate();
			// mysql: last_insert_id vs. sqlite: last_insert_rowid
			ps = conn.prepareStatement("select last_insert_rowid()");
			rs = ps.executeQuery();
			if (rs.next()) {
				id = rs.getInt(1);
			}
		} catch (SQLException e) {
			System.out.println("insertStudent SQL exception " + e.getMessage());
			System.out.println("\nQuery: " + ps.toString());
		} finally {
			try {
				if (rs != null)
					rs.close();
				if (ps != null)
					ps.close();
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return id;
	}
}

