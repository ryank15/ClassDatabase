package groupproject.mucis.datastructures;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * @author TeamJava
 * @version 1.0 on 4/16/2014
 */

public class DAOSQLiteUsername extends AbstractUsernameDAO {
	private static final String DRIVER = "org.sqlite.JDBC";
	private static final String URL = "jdbc:sqlite:student.db";

	public DAOSQLiteUsername() {
		super(DRIVER, URL);
	}

	public void createTable() {
		String q = "create table if not exists names ("
				+ "id integer primary key autoincrement, "
				+ "userName varchar(25) not null, " + "password varchar(25) not null)";
		myUpdate(q);
	}
	
	@Override
	public int insertName(Username n) {
		String q = "INSERT INTO names (id, userName, password) VALUES (null, ?, ?)";
		int id = 0;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			conn = DriverManager.getConnection(URL);
			ps = conn.prepareStatement(q);
			ps.setString(1, n.getUserName());
			ps.setString(2, n.getPassword());
			ps.executeUpdate();
			// mysql: last_insert_id vs. sqlite: last_insert_rowid
			ps = conn.prepareStatement("select last_insert_rowid()");
			rs = ps.executeQuery();
			if (rs.next()) {
				id = rs.getInt(1);
			}
		} catch (SQLException e) {
			System.out.println("insertStudent SQL exception " + e.getMessage());
			System.out.println("\nQuery: " + ps.toString());
		} finally {
			try {
				if (rs != null)
					rs.close();
				if (ps != null)
					ps.close();
				if (conn != null)
					conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return id;
	}

	@Override
	public String getUserName() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getPassword() {
		// TODO Auto-generated method stub
		return null;
	}
}
